{
    "openapi": "3.0.2",
    "info": {
        "title": "Issue Reporter API",
        "description": "This service is located at [https://HOST/ALIAS/Server/ws/issuetest/v1/](https://HOST/ALIAS/Server/ws/issuetest/v1/)",
        "version": ""
    },
    "servers": [
        {
            "url": "https://HOST/ALIAS/Server/ws/issuetest/v1"
        }
    ],
    "tags": [
        {
            "name": "Issue"
        },
        {
            "name": "User"
        },
        {
            "name": "Identity"
        },
        {
            "name": "SimpleUser"
        }
    ],
    "paths": {
        "/Issue": {
            "get": {
                "summary": "Get entities from Issue",
                "tags": [
                    "Issue"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "keyed_name",
                                    "keyed_name desc",
                                    "created_on",
                                    "created_on desc",
                                    "title",
                                    "title desc",
                                    "solution",
                                    "solution desc",
                                    "item_number",
                                    "item_number desc",
                                    "external_link",
                                    "external_link desc",
                                    "description",
                                    "description desc",
                                    "status",
                                    "status desc",
                                    "priority",
                                    "priority desc",
                                    "severity",
                                    "severity desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name",
                                    "created_on",
                                    "title",
                                    "solution",
                                    "item_number",
                                    "external_link",
                                    "description",
                                    "status",
                                    "priority",
                                    "severity"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "reported_by",
                                    "owned_by_id",
                                    "created_by_id"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Issue",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/issuetest.Issue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Issue",
                "tags": [
                    "Issue"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.Issue-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.Issue"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Issue('{id}')": {
            "parameters": [
                {
                    "description": "key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "nullable": true
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Issue by key",
                "tags": [
                    "Issue"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name",
                                    "created_on",
                                    "title",
                                    "solution",
                                    "item_number",
                                    "external_link",
                                    "description",
                                    "status",
                                    "priority",
                                    "severity"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "reported_by",
                                    "owned_by_id",
                                    "created_by_id"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.Issue"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Issue",
                "tags": [
                    "Issue"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.Issue-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Issue",
                "tags": [
                    "Issue"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Issue('{id}')/reported_by": {
            "parameters": [
                {
                    "description": "key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "nullable": true
                    }
                }
            ],
            "get": {
                "summary": "Get related reported_by",
                "tags": [
                    "Issue",
                    "User"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "email",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.User"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Issue('{id}')/owned_by_id": {
            "parameters": [
                {
                    "description": "key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "nullable": true
                    }
                }
            ],
            "get": {
                "summary": "Get related owned_by_id",
                "tags": [
                    "Issue",
                    "Identity"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.Identity"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Issue('{id}')/created_by_id": {
            "parameters": [
                {
                    "description": "key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "nullable": true
                    }
                }
            ],
            "get": {
                "summary": "Get related created_by_id",
                "tags": [
                    "Issue",
                    "SimpleUser"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.SimpleUser"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/User": {
            "get": {
                "summary": "Get entities from User",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "email",
                                    "email desc",
                                    "keyed_name",
                                    "keyed_name desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "email",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of User",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/issuetest.User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to User",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.User-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.User"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/User('{id}')": {
            "parameters": [
                {
                    "description": "key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "nullable": true
                    }
                }
            ],
            "get": {
                "summary": "Get entity from User by key",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "email",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.User"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in User",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.User-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from User",
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Identity": {
            "get": {
                "summary": "Get entities from Identity",
                "tags": [
                    "Identity"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "keyed_name",
                                    "keyed_name desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Identity",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/issuetest.Identity"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Identity",
                "tags": [
                    "Identity"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.Identity-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.Identity"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Identity('{id}')": {
            "parameters": [
                {
                    "description": "key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "nullable": true
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Identity by key",
                "tags": [
                    "Identity"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.Identity"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Identity",
                "tags": [
                    "Identity"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.Identity-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Identity",
                "tags": [
                    "Identity"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/SimpleUser": {
            "get": {
                "summary": "Get entities from SimpleUser",
                "tags": [
                    "SimpleUser"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "keyed_name",
                                    "keyed_name desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of SimpleUser",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/issuetest.SimpleUser"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to SimpleUser",
                "tags": [
                    "SimpleUser"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.SimpleUser-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.SimpleUser"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/SimpleUser('{id}')": {
            "parameters": [
                {
                    "description": "key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "nullable": true
                    }
                }
            ],
            "get": {
                "summary": "Get entity from SimpleUser by key",
                "tags": [
                    "SimpleUser"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "keyed_name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/issuetest.SimpleUser"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in SimpleUser",
                "tags": [
                    "SimpleUser"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/issuetest.SimpleUser-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from SimpleUser",
                "tags": [
                    "SimpleUser"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/CatchWebhook": {
            "post": {
                "summary": "Invoke action CatchWebhook",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "nullable": true
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/GetUserByEmail": {
            "post": {
                "summary": "Invoke action GetUserByEmail",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "nullable": true
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/VaultBeginTransaction": {
            "post": {
                "summary": "Invoke action VaultBeginTransaction",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vault.TransactionInfo"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/VaultCommitTransaction": {
            "post": {
                "summary": "Invoke action VaultCommitTransaction",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "transaction_id": {
                                        "type": "string"
                                    },
                                    "Files": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Vault.File"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/VaultRollbackTransaction": {
            "post": {
                "summary": "Invoke action VaultRollbackTransaction",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "transaction_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/$batch": {
            "post": {
                "summary": "Send a group of requests",
                "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
                "tags": [
                    "Batch Requests"
                ],
                "requestBody": {
                    "required": true,
                    "description": "Batch request",
                    "content": {
                        "multipart/mixed;boundary=request-separator": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Issue HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch response",
                        "content": {
                            "multipart/mixed": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Vault.File": {
                "title": "File",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "content_type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Vault.TransactionInfo": {
                "title": "TransactionInfo",
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "type": "string"
                    },
                    "vault_id": {
                        "type": "string"
                    },
                    "vault_url": {
                        "type": "string"
                    }
                }
            },
            "issuetest.Identity": {
                "title": "Identity",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "issuetest.Identity-create": {
                "title": "Identity (for create)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id"
                ]
            },
            "issuetest.Identity-update": {
                "title": "Identity (for update)",
                "type": "object",
                "properties": {
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "issuetest.Issue": {
                "title": "Issue",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "solution": {
                        "type": "string",
                        "nullable": true
                    },
                    "item_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "external_link": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Status"
                            }
                        ],
                        "nullable": true
                    },
                    "priority": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Priority"
                            }
                        ],
                        "nullable": true
                    },
                    "severity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Severity"
                            }
                        ],
                        "nullable": true
                    },
                    "reported_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.User"
                            }
                        ],
                        "nullable": true
                    },
                    "owned_by_id": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Identity"
                            }
                        ],
                        "nullable": true
                    },
                    "created_by_id": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.SimpleUser"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "issuetest.Issue-create": {
                "title": "Issue (for create)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "solution": {
                        "type": "string",
                        "nullable": true
                    },
                    "item_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "external_link": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Status"
                            }
                        ],
                        "nullable": true
                    },
                    "priority": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Priority"
                            }
                        ],
                        "nullable": true
                    },
                    "severity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Severity"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "id"
                ]
            },
            "issuetest.Issue-update": {
                "title": "Issue (for update)",
                "type": "object",
                "properties": {
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "solution": {
                        "type": "string",
                        "nullable": true
                    },
                    "item_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "external_link": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Status"
                            }
                        ],
                        "nullable": true
                    },
                    "priority": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Priority"
                            }
                        ],
                        "nullable": true
                    },
                    "severity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/issuetest.Issue_Severity"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "issuetest.Issue_Priority": {
                "type": "string",
                "title": "Issue_Priority",
                "enum": [
                    "High",
                    "Medium",
                    "Low"
                ]
            },
            "issuetest.Issue_Severity": {
                "type": "string",
                "title": "Issue_Severity",
                "enum": [
                    "Blocking",
                    "Major",
                    "Minor",
                    "Trivial"
                ]
            },
            "issuetest.Issue_Status": {
                "type": "string",
                "title": "Issue_Status",
                "enum": [
                    "New",
                    "In Review",
                    "Fixed",
                    "Canceled"
                ]
            },
            "issuetest.SimpleUser": {
                "title": "SimpleUser",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "issuetest.SimpleUser-create": {
                "title": "SimpleUser (for create)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id"
                ]
            },
            "issuetest.SimpleUser-update": {
                "title": "SimpleUser (for update)",
                "type": "object",
                "properties": {
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "issuetest.User": {
                "title": "User",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "issuetest.User-create": {
                "title": "User (for create)",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id"
                ]
            },
            "issuetest.User-update": {
                "title": "User (for update)",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyed_name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "count": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 0
                    },
                    {
                        "type": "string"
                    }
                ],
                "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
            },
            "error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "object",
                        "required": [
                            "code",
                            "message"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string"
                            },
                            "details": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "innererror": {
                                "type": "object",
                                "description": "The structure of this object is service-specific"
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "top": {
                "name": "$top",
                "in": "query",
                "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "example": 50
            },
            "skip": {
                "name": "$skip",
                "in": "query",
                "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "count": {
                "name": "$count",
                "in": "query",
                "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
                "schema": {
                    "type": "boolean"
                }
            },
            "search": {
                "name": "$search",
                "in": "query",
                "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            }
        }
    }
}